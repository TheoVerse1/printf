.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH _PRINTF 1 "2022-03-21" Cohort17
.SH NAME
_printf \- Recreation of printf
.SH SYNOPSIS
int printf(const char *format, ...)

.SH DESCRIPTION
.B _printf
The function _printf is a variadic function that produces
a string according to a format and prints it to the standard
output, much like the C standard library function "printf".
It can receive a lot of variables as arguments according the
positions with flags in the formatter. 

.SH HOW TO USE
.B _printf \- Belongs to the library stdio.h.
Allows to display (data), The function is created
.IP printf();
Parameters are placed inside the parantheses.
The function returns a value that represents the character number

.IP -syntax
printf("chain", value_1, value_2,...)

.SH example
#include "main.h"

int main(void)
.IP {
.IP _printf("Hello World.\n");
.IP "return (0);"
.IP }

.SH COMPILATION
$ gcc -Wall -Werror -Wextra -pedantic -std=gnu89 *.c
.SH SPECIFIER & OUTPUT
.IP -c
Character
.IP "-d or i"
Signed decimal integer
.IP -e
Scientific notation (mantissa/exponent) using e character
.IP -E
Scientific notation (mantissa/exponent) using E character
.IP -f
Decimal floating point
.IP -g
Uses the shorter of %e or %f
.IP -G
Uses the shorter of %E or %f
.IP -o
Signed octal
.IP -s
String of characters
.IP -u
Unsigned decimal integer
.IP -x
Unsigned hexadecimal integer
.IP -X
Unsigned hexadecimal integer (capital letters)
.IP -p
Pointer address
.IP -n
Nothing printed
.IP -%
Character
.SH FLAGS & DESCRIPTION
.IP -
Left-justify within the given field width; Right justification
is the default (see width sub-specifier).
.IP +
Forces to precede the result with a plus or minus sign (+ or -)
even for positive numbers. By default, only negative numbers are
preceded with a -ve sign.
.IP "(space)"
If no sign is going to be written, a blank space is inserted before
the value.
.IP #
Used with o, x or X specifiers the value is preceded with 0, 0x or 0X
respectively for values different than zero. Used with e, E and f, it
forces the written output to contain a decimal point even if no digits
would follow. By default, if no digits follow, no decimal point is written.
Used with g or G the result is the same as with e or E but trailing zeros
are not removed.

.SH RETURN VALUE
If successful, the total number of characters written is returned. On failure,
a negative number is returned.

.SH EXAMPLE

#include "main.h"

int main(void)
.IP {
.IP _printf("Let\'s try to printf a simple sentence.\n");
.IP "return (0);"
.IP }

.SH AUTHOR
Alexander Paladines -
Yoshua Lopez -
Maria Paz Quirola
.SH "SEE ALSO"
.BR putchar (1),
.BR malloc (3),
.BR free (3),
.BR write (2)
